<?xml version="1.0" encoding="UTF-8"?>

<project name="GODMain" default="all" basedir=".">
	
	<import file="../GOD_Build/build.xml"/>
	
	<property name="client-agent-mainclass" value="ddproto1.localagent.instrumentation.java5.ClientSideAgent"/>
	<property name="agent-library-list" value="${log4j.jar} ${bcel.jar} ${local.agent.jar}"/>
	
	<property name="local-agent-subdir" value="ddproto1/localagent"/>
	<property name="commons-subdir" value="ddproto1/commons"/>
	<property name="configurator-commons-subdir" value="ddproto1/configurator/commons"/>
	<property name="exception-commons-subdir" value="ddproto1/exception/commons"/>
	<property name="util-commons-subdir" value="ddproto1/util/commons"/>
	<property name="traits-commons-subdir" value="ddproto1/util/traits/commons"/>
	<property name="collections-commons-subdir" value="ddproto1/util/collection/commons"/>

	<target name="init" depends="global-init">
		<path id="rmic.class.path">
			<fileset refid="log4j.libs"/>
			<fileset dir="${jarArtifacts.dir}">
				<include name="*.jar"/>
			</fileset>
		</path>
	</target>	
	
	<!-- 
		==================================================================
		- This target generates the client side instrumentation agent jar. 
		- In principle it should be simple, as all client-side code is 
		- located under package 'ddproto1.localagent' and all shared code
		- is located under packages that end with 'commons'.
		================================================================== -->	
	
	<target name="gen-client-agent-jar" depends="init">
		<jar destfile="${jarArtifacts.dir}/${local.agent.jar}">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Premain-Class" value="${client-agent-mainclass}"/>
				<attribute name="Boot-Class-Path" value="${agent-library-list}"/>
				<attribute name="Can-Redefine-Classes" value="true"/>
			</manifest>
			
			<zipfileset dir="${classes.dir}/${local-agent-subdir}" 
				includes="**/*.class" prefix="${local-agent-subdir}"/>
			
			<zipfileset dir="${classes.dir}/${commons-subdir}" 
				includes="**/*.class" prefix="${commons-subdir}"/>
			
			<zipfileset dir="${classes.dir}/${configurator-commons-subdir}" 
				includes="**/*.class" prefix="${configurator-commons-subdir}"/>			
			
			<zipfileset dir="${classes.dir}/${exception-commons-subdir}" 
				includes="**/*.class" prefix="${exception-commons-subdir}"/>
			
			<zipfileset dir="${classes.dir}/${util-commons-subdir}" 
				includes="**/*.class" prefix="${util-commons-subdir}"/>

			<zipfileset dir="${classes.dir}/${traits-commons-subdir}" 
				includes="**/*.class" prefix="${traits-commons-subdir}"/>
			
			<zipfileset dir="${classes.dir}/${collections-commons-subdir}" 
				includes="**/*.class" prefix="${collections-commons-subdir}"/>
		</jar>
	</target>	
	
	<!-- Compiles client-side stubs. -->
	<target name="compilestubs" depends="init">
		<rmic base="${classes.dir}" 
			classname="ddproto1.launcher.procserver.ProcessServerManager.RMICallbackObject">
			<classpath refid="rmic.class.path"/>
		</rmic>
	</target>

	<!-- Generates a jar out of client-side stubs. -->
	<target name="gen-stubjar" depends="init, compilestubs">
		<jar destfile="${jarArtifacts.dir}/${ant.project.name}-${stubsuffix}.jar">
			<fileset dir="${classes.dir}" 
				includes="**/*_Stub.class"/>
		</jar>
	</target>
	
	<target name="all" depends="gen-client-agent-jar, gen-stubjar"/>
	
</project>